const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('phatnguoi')
    .setDescription('Ki·ªÉm tra ph·∫°t ngu·ªôi theo bi·ªÉn s·ªë')
    .addStringOption(opt =>
      opt.setName('bien_so')
         .setDescription('V√≠ d·ª•: 51G-693.53')
         .setRequired(true)
    ),

  async execute(interaction) {
    const bienSo = interaction.options.getString('bien_so').trim();
    await interaction.deferReply();

    try {
      const res = await axios.get(`https://api.sumiproject.net/gtl/phatnguoi?bien_so=${encodeURIComponent(bienSo)}`);
      const body = res.data;
      if (body.status !== 1 || !body.data.length) {
        return interaction.editReply('Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ ph·∫°t ngu·ªôi.');
      }

      const info = body.data[0];
      const stats = body.data_info;

      const embed = new EmbedBuilder()
        .setTitle(`üìã Ph·∫°t ngu·ªôi: ${info["Bi·ªÉn ki·ªÉm so√°t"]}`)
        .setColor(info["Tr·∫°ng th√°i"] === 'Ch∆∞a x·ª≠ ph·∫°t' ? 0xFFA500 : 0x00AA00)
        .addFields(
          { name: 'M√†u bi·ªÉn',           value: info["M√†u bi·ªÉn"],                     inline: true },
          { name: 'Lo·∫°i ph∆∞∆°ng ti·ªán',   value: info["Lo·∫°i ph∆∞∆°ng ti·ªán"],             inline: true },
          { name: 'Tr·∫°ng th√°i',         value: info["Tr·∫°ng th√°i"],                   inline: true },
          { name: 'Th·ªùi gian vi ph·∫°m',  value: info["Th·ªùi gian vi ph·∫°m"],            inline: false },
          { name: 'ƒê·ªãa ƒëi·ªÉm vi ph·∫°m',   value: info["ƒê·ªãa ƒëi·ªÉm vi ph·∫°m"],             inline: false },
          { name: 'H√†nh vi vi ph·∫°m',    value: info["H√†nh vi vi ph·∫°m"],              inline: false },
          { name: 'ƒê∆°n v·ªã ph√°t hi·ªán',    value: info["ƒê∆°n v·ªã ph√°t hi·ªán vi ph·∫°m"],     inline: false },
          { name: 'N∆°i gi·∫£i quy·∫øt',      value: info["N∆°i gi·∫£i quy·∫øt v·ª• vi·ªác"].join('\n'), inline: false }
        )
        .setFooter({ text: `K·∫øt qu·∫£: t·ªïng ${stats.total}, ch∆∞a x·ª≠ ${stats.chuaxuphat}, ƒë√£ x·ª≠ ${stats.daxuphat}` })
        .setTimestamp();

      return interaction.editReply({ embeds: [embed] });
    } catch (err) {
      console.error(err);
      return interaction.editReply('C√≥ l·ªói khi g·ªçi API, h√£y th·ª≠ l·∫°i sau.');
    }
  }
};
